apiVersion: state-machine.converged-computing.org/v1alpha1
kind: StateMachine
metadata:
  name: mummi
spec:
  manager:
    pullPolicy: Never
    interactive: false
  workflow:
    completed: 1
    prefix: "structure_"

  cluster:
    maxSize: 6

  jobs:
  - name: mlrunner
    config:
      nodes: 1
      gpus: 0
      coresPerTask: 6
      command: "/root/.pixi/bin/pixi run --manifest-path /pixi-env/pixi.toml bash /workdir/entrypoint.sh"
    image: 633731392008.dkr.ecr.us-east-1.amazonaws.com/mini-mummi:mlrunner
    script: |
      mummi_mlserver_nnodes=1
      MUMMI_APP=/opt/clones/mummi-ras
      export MUMMI_ROOT=$MUMMI_APP
      export MUMMI_RESOURCES=/opt/clones/mummi_resources
      export MUMMI_APP
      model="/opt/clones/mummi_resources/ml/chonky-model/CG_pos_data_summary_pos_dis_C1_v1.npz"
      ws=/opt/clones/mummi-ras/mlserver
      # Shared output for validator, sampler, and generator
      mldir=/opt/clones/mummi-ras/mlserver
      resources="martini3-validator"
      complex="ras-rbdcrd-ref-CG.gro"
      cmd="mummi-ml start {% for jobid in jobids %}--jobid {{jobid}} {% endfor %} --workspace=${ws} --outdir=${outpath} --tag mlrunner --device cpu --plain-http --registry=${registry} --encoder-model ${model} --ml-outdir=${mldir} --feedback --resources ${resources} --complex=${complex}"
      mkdir -p /opt/clones/extract
      cd /opt/clones/extract
      tar -xzvf /opt/clones/model.tar.gz
      extracted=$(ls /opt/clones/extract)
      cd -
      mv /opt/clones/extract/${extracted} /opt/clones/mummi_resources/ml/chonky-model
      NUM_THREADS=$(nproc)
      export OMP_NUM_THREADS=$NUM_THREADS
      export KERAS_BACKEND='theano'
      umask 007
      python $MUMMI_APP/mummi_ras/scripts/create_organization.py
      # Trajectory feedback files
      here=$(pwd)
      feedback=/opt/clones/mummi-ras/feedback-cg2ml
      mkdir -p ${feedback}
      # These are named by date, but we are just getting all of them.
      for tag in $(oras repo tags --plain-http $registry/cganalysis)
        do
           mkdir -p ${feedback}/${tag}
           cd ${feedback}/${tag}
           oras pull --plain-http $registry/cganalysis:$tag
      done
      cd $here
      echo "$cmd"
      $cmd

  - name: createsim
    config:
      nodes: 1
      coresPerTask: 6
      gpus: 0
      walltime: '0:45:00'

    image: 633731392008.dkr.ecr.us-east-1.amazonaws.com/mini-mummi:createsims
    registry:
      pull: mlrunner
      push: createsim
    script: |
      . ~/.bash_profile
      MUMMI_APP=/opt/clones/mummi-ras MUMMI_ROOT=$MUMMI_APP
      MUMMI_RESOURCES=/opt/clones/mummi_resources
      export MUMMI_ROOT MUMMI_APP MUMMI_RESOURCES
      export OMP_NUM_THREADS=6
      splitup=(${jobid//_/ })
      simdir=$(echo ${splitup[1]})
      simname=${jobid}
      locpath=/tmp/workdir
      mv /tmp/out ${locpath}
      mkdir -p ${outpath}; cd ${locpath}
      mkdir ${simdir}
      cp *.gro ${simdir}/${jobid}.gro
      mummi_createsim \
        --fstype simple \
        --patch ${jobid} \
        --inpath $(pwd) \
        --outpath $outpath \
        --outlocal $locpath \
        --logpath $locpath \
        --loglevel 2 \
        --gromacs gmx \
        --mpi "gmx mdrun" \
        --mini \
        --mdrunopt " -ntmpi 1 -ntomp $OMP_NUM_THREADS -pin off"

  - name: cganalysis
    config:
      nodes: 1
      coresPerTask: 3
      gpus: 0
    image: 633731392008.dkr.ecr.us-east-1.amazonaws.com/mini-mummi:cganalysis
    registry:
      pull: createsim
      push: cganalysis
    script: |
      . ~/.bash_profile
      MUMMI_APP=/opt/clones/mummi-ras MUMMI_ROOT=$MUMMI_APP
      MUMMI_RESOURCES=/opt/clones/mummi_resources
      export MUMMI_ROOT MUMMI_APP MUMMI_RESOURCES
      export OMPI_COMM_WORLD_RANK=1
      export OMP_NUM_THREADS=6
      simname=${jobid}
      locpath=/tmp/workdir
      mv /tmp/out ${locpath}
      mkdir -p ${outpath}; cd ${locpath}
      ls
      cframe=0
      echo ">> xtclast = $xtclast, cframe = $cframe"
      mummi_cganalysis \
        --simname ${jobid} \
        --path $locpath \
        --pathremote $outpath \
        --siminputs $outpath \
        --fstype mummi \
        --fbio mummi \
        --simbin gmx \
        --backend GROMACS_PARTS \
        --frameProcessBatchSize 1 \
        --simcores 6 \
        --nprocs 1 \
        --stopsimtime 50 \
        --simruntime 0.1 \
        --logstdout \
        --loglevel 2 \
        --mini \
        --fcount $cframe
      # Trajectory feedback file
      retval=$?
      if [[ "$retval" == "0" ]]; then
          echo "Successful run found. Pushing feedback"
          for directory in $(ls /opt/clones/mummi-ras/feedback-cg2ml)
            do
             cd /opt/clones/mummi-ras/feedback-cg2ml/${directory}
            timestamp=$(date "+%Y-%m-%d_%H-%M-%S")
            oras push --plain-http $registry/cganalysis:feedback-$timestamp .
          done
      fi
